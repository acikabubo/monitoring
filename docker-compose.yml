secrets:
  keycloak_admin_password:
    file: ./secrets/keycloak_admin_password.txt
  keycloak_db_password:
    file: ./secrets/keycloak_db_password.txt
  grafana_oauth_secret:
    file: ./secrets/grafana_oauth_secret.txt
  postgres_password:
    file: ./secrets/postgres_password.txt

services:
  traefik:
    image: traefik:v3.1
    container_name: traefik
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yml:/etc/traefik/traefik.yml:ro
      - ./letsencrypt:/letsencrypt
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.localhost`)"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.localhost`)"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
    depends_on:
      - grafana

  grafana:
    image: grafana/grafana
    container_name: grafana
    environment:
      - GF_SERVER_ROOT_URL=http://grafana.localhost
      - GF_AUTH_GENERIC_OAUTH_ENABLED=true
      - GF_AUTH_GENERIC_OAUTH_NAME=Keycloak
      - GF_AUTH_GENERIC_OAUTH_ALLOW_SIGN_UP=true
      - GF_AUTH_GENERIC_OAUTH_CLIENT_ID=grafana
      - GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET=I67tMNWH2QaURhYbISmxrXRQcwO4mr9d
      - GF_AUTH_GENERIC_OAUTH_AUTH_URL=http://keycloak.localhost/realms/Monitoring/protocol/openid-connect/auth
      - GF_AUTH_GENERIC_OAUTH_TOKEN_URL=http://keycloak:8080/realms/Monitoring/protocol/openid-connect/token
      - GF_AUTH_GENERIC_OAUTH_API_URL=http://keycloak.localhost/realms/Monitoring/protocol/openid-connect/userinfo
      - GF_AUTH_GENERIC_OAUTH_LOGOUT_URL=http://keycloak.localhost/realms/Monitoring/protocol/openid-connect/logout
      - GF_AUTH_SIGNOUT_REDIRECT_URL=http://keycloak.localhost/realms/Monitoring/protocol/openid-connect/logout?client_id=grafana&post_logout_redirect_uri=http://grafana.localhost
      - GF_AUTH_OAUTH_AUTO_LOGIN=true
      - GF_AUTH_GENERIC_OAUTH_USE_REFRESH_TOKEN=true
      - GF_AUTH_GENERIC_OAUTH_REFRESH_TOKEN_EXPIRATION=60m
      - GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH=contains(roles[*], 'Admin') && 'Admin' || contains(roles[*], 'Editor') && 'Editor' || 'Viewer'
      - GF_AUTH_GENERIC_OAUTH_ALLOW_ASSIGN_GRAFANA_ADMIN=true
      - GF_AUTH_GENERIC_OAUTH_SCOPES=openid profile email
    secrets:
      - grafana_oauth_secret
    volumes:
      - grafana-storage:/var/lib/grafana
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.localhost`)"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"

  keycloak:
    image: keycloak/keycloak:25.0
    container_name: keycloak
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB=postgres
      - KC_DB_URL_HOST=postgres
      - KC_DB_URL_PORT=5432
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=keycloak-pass
      - PROXY_ADDRESS_FORWARDING=true
      - KEYCLOAK_FRONTEND_URL=http://keycloak.localhost
    secrets:
      - keycloak_admin_password
      - keycloak_db_password
    depends_on:
      - postgres
    volumes:
      - ./keycloak-realm.json:/opt/keycloak/data/import/keycloak-realm.json
    command: -v start-dev --import-realm
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak.rule=Host(`keycloak.localhost`)"
      - "traefik.http.services.keycloak.loadbalancer.server.port=8080"

  postgres:
    image: postgres:17-alpine
    container_name: postgres
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=keycloak-pass
    secrets:
      - postgres_password
    volumes:
      - postgres-data:/var/lib/postgresql/data

volumes:
  grafana-storage:
  postgres-data:
  letsencrypt:
